extends layout

append scripts
    script(src="/scripts/functions/registerMarketplaceStockUpdateListener.js" type="module" defer)
    script(src="/scripts/functions/registerTableFilters.js" defer)

block content
  h1.snap-scroll-stop--start= title
  section
      block filters
          div(class="table-filters")
              a(class="btn table-filter--btn table-filter-name--isActual table-filter-value--notActual") Не актуальные
              a(class="btn table-filter--btn table-filter-name--isActual table-filter-value--all") Все
          div(class="table-filters")
              a(class="btn table-filter--btn table-filter-name--stock_status table-filter-value--outofstock") Нет в наличии

  section.section--wide
    div.stocks-tables
      for table in tables
        - const {tableName, products} = table
        div.stocks-tables--cell.snap-scroll-stop--start
            h2= tableName
            div.stocks-table--wrapper
                div.stocks-table--inner
                    table(id=marketType, class="stocks-table")
                        thead
                            tr
                                block table-stock-headers
                                  each column in Object.entries(headers)
                                    -let [headerName, headerData] = column;
                                    th(class=`col--${headerData.type}`)= headerName
                            block table-stock-body
                                if products.length > 0
                                    tbody
                                      each product in products
                                        tr
                                          each headerData in Object.values(headers)
                                              - let productId = headerData.type === 'name' && product.productInnerId ? `${product.productInnerId}` : '';
                                              - let marketProductId = headerData.type === 'identifier' && product.marketProductInnerId ? `${product.marketProductInnerId}` : '';
                                              - let updateBy = product[headerData.field] ? product[headerData.field].updateBy : '';
                                              - let marketType = product[headerData.field] ? product[headerData.field].marketType : '';
                                              td( class=`col--${headerData.type} ${
                                                    headerData.type === 'fbs' ? product[headerData.field] ? product[headerData.field].stock === 0 ? 'out-of-stock' : '' : '' : ''} ${
                                                    headerData.type === 'fbm' ? product[headerData.field] === 0 ? 'out-of-stock' : '' : ''}`
                                                  ref=(productId ? productId : marketProductId)
                                                  updateBy=`${headerData.type === 'fbs' ? updateBy : ''}`
                                                  marketType=`${headerData.type === 'fbs' ? marketType : ''}`)
                                                  // if name has a parentheses, put within text to description tag attribute
                                                  |
                                                  if (headerData.type === 'name' && product[headerData.field].includes("("))
                                                      - const [ , productName, productDescription] = product[headerData.field].match(/(.*) \((.*)\)/);
                                                      | #{productName}
                                                      br
                                                      i.product-description #{productDescription}
                                                  else
                                                      if headerData.type === 'fbs'
                                                          =product[headerData.field] ? product[headerData.field].stock : ''
                                                      else
                                                          | #{product[headerData.field]}